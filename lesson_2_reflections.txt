What happens when you initialize a repository? Why do you need to do it?

	Git creates a hidden directory structure and files, which are ready to
	store files. Cannot do git version control without it.

How is the Staging Area different from the Working Directory and the repository?
What value do you think it offers?

	The Working Directory is the "home" location of files which may or may not be
	included in the repository, and it is also the home of the repository. The
	repository is the "holder" of committed files and their various versions.
	The Staging Area is a temporary holder of files which are ready to be
	committed, but have not yet been committed. Upon "commit", all files in the
	Staging Area go into the Repository together.

	This allows files which are related to each other, and which together may
	relate to a specific change, to be included in the same new version in the
	Repository.

How can you use the staging area to make sure you have one commit per
logical change?

	I can do a "git diff" to learn the difference between the working directory
	and the repository, to help me learn what changes I have ready to commit.
	Also, I can add files to the staging area in groups, relative to a single
	change, then commit those files. Files which have changes unrelated to that
	single change can be added/committed later.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	A branch is useful when you want to make changes which should be separated
	from the main set of code. If there is a major flaw which will take time
	to fix, and in the mean time other bugs or small features might be added
	to the program, the major flaw should be dealt with in a branch off from
	the master so the smaller bugs and small features can be added to the app
	without adding in-process changes related to the major flaw.

How do the diagrams help you visualize the branch structure?

	They demonstrate the commits which are related to each other, and which are
	not related, or are distantly related, to each other.
